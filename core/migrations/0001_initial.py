# Generated by Django 5.2.7 on 2025-10-04 04:52

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Farm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('location_text', models.CharField(blank=True, max_length=255)),
                ('area_ha', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Area (ha)')),
                ('status', models.CharField(default='active', max_length=16)),
                ('notes', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('user', 'User'), ('owner', 'Owner'), ('admin', 'Admin')], default='user', max_length=20)),
                ('phone', models.CharField(blank=True, max_length=32)),
                ('company_name', models.CharField(blank=True, max_length=160)),
                ('is_approved', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AgronomistProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialization', models.CharField(blank=True, max_length=120)),
                ('license_no', models.CharField(blank=True, max_length=64)),
                ('years_experience', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(80)])),
                ('rating_avg', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='agronomist_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('year', models.PositiveIntegerField()),
                ('transmission', models.CharField(choices=[('AUTO', 'Automatic'), ('MANUAL', 'Manual')], max_length=20)),
                ('mileage', models.CharField(max_length=50)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('image', models.ImageField(blank=True, null=True, upload_to='cars/')),
                ('description', models.TextField(blank=True)),
                ('owner', models.ForeignKey(blank=True, limit_choices_to={'role': 'owner'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cars', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-year', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pickup_location', models.CharField(max_length=200)),
                ('drop_location', models.CharField(max_length=200)),
                ('pickup_date', models.DateField()),
                ('pickup_time', models.TimeField()),
                ('special_request', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL)),
                ('car', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='core.car')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season_code', models.CharField(max_length=32)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('yield_ton', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('yield_ton_per_ha', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('cost_total', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('score', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('recommendations', models.TextField(blank=True)),
                ('agronomist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='evaluations', to='core.agronomistprofile')),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='core.farm')),
            ],
        ),
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=120)),
                ('variety', models.CharField(blank=True, max_length=120)),
                ('season_code', models.CharField(blank=True, max_length=32)),
                ('area_ha', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0)])),
                ('planting_date', models.DateField(blank=True, null=True)),
                ('actual_harvest_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(default='planned', max_length=16)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crops', to='core.farm')),
            ],
        ),
        migrations.CreateModel(
            name='AgronomistAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_on_farm', models.CharField(default='lead', max_length=16)),
                ('assigned_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('agronomist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='core.agronomistprofile')),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='core.farm')),
            ],
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_code', models.CharField(default='other', max_length=32)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('qty', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('unit', models.CharField(default='UNIT', max_length=8)),
                ('cost_total', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('agronomist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activities', to='core.agronomistprofile')),
                ('crop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activities', to='core.crop')),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='core.farm')),
            ],
        ),
        migrations.CreateModel(
            name='OwnerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=160)),
                ('tax_no', models.CharField(blank=True, max_length=64)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='owner_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='farm',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='farms', to='core.ownerprofile'),
        ),
    ]
